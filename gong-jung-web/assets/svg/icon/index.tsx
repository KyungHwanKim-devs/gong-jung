import { SVGProps } from "react";

export const DownloadIcon = ({
  className,
  fill,
  ...props
}: SVGProps<SVGSVGElement>) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width={12}
    height={12}
    fill="none"
    className={className}
    {...props}
  >
    <path
      fill={fill || "#fff"}
      d="M10.5 8.25V10.5H1.5V8.25H0V10.5C0 11.325 0.675 12 1.5 12H10.5C11.325 12 12 11.325 12 10.5V8.25H10.5ZM9.75 5.25L8.6925 4.1925L6.75 6.1275V0H5.25V6.1275L3.3075 4.1925L2.25 5.25L6 9L9.75 5.25Z"
    />
  </svg>
);

// 확장, 확대
export const ZoomOutIcon = ({
  className,
  ...props
}: SVGProps<SVGSVGElement>) => (
  <svg xmlns="http://www.w3.org/2000/svg" width={18} height={18} {...props}>
    <path
      fill={props.fill || "#fff"}
      d="m11.25 2.25 1.725 1.725-2.168 2.153 1.066 1.064 2.152-2.167L15.75 6.75v-4.5h-4.5Zm-9 4.5 1.725-1.725 2.153 2.167 1.064-1.064-2.167-2.153L6.75 2.25h-4.5v4.5Zm4.5 9-1.725-1.725 2.167-2.152-1.064-1.066-2.153 2.168L2.25 11.25v4.5h4.5Zm9-4.5-1.725 1.725-2.152-2.168-1.066 1.066 2.168 2.152-1.725 1.725h4.5v-4.5Z"
    />
  </svg>
);

export const CloseIcon = ({ className, ...props }: SVGProps<SVGSVGElement>) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 12 12"
    className={`h-3 w-3 fill-black-texts ${className}`}
    {...props}
  >
    <path d="M11.25 1.808 10.193.75 6 4.942 1.808.75.75 1.808 4.942 6 .75 10.193l1.058 1.057L6 7.058l4.193 4.192 1.057-1.057L7.058 6l4.192-4.192Z" />
  </svg>
);

export const SettingIcon = (props: {
  svgProps?: SVGProps<SVGSVGElement>;
  className?: string;
}) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    strokeWidth="1.5"
    stroke="currentColor"
    className={`size-6 w-6 h-6 ${props.className}`}
  >
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      d="M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.325.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 0 1 1.37.49l1.296 2.247a1.125 1.125 0 0 1-.26 1.431l-1.003.827c-.293.241-.438.613-.43.992a7.723 7.723 0 0 1 0 .255c-.008.378.137.75.43.991l1.004.827c.424.35.534.955.26 1.43l-1.298 2.247a1.125 1.125 0 0 1-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.47 6.47 0 0 1-.22.128c-.331.183-.581.495-.644.869l-.213 1.281c-.09.543-.56.94-1.11.94h-2.594c-.55 0-1.019-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 0 1-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 0 1-1.369-.49l-1.297-2.247a1.125 1.125 0 0 1 .26-1.431l1.004-.827c.292-.24.437-.613.43-.991a6.932 6.932 0 0 1 0-.255c.007-.38-.138-.751-.43-.992l-1.004-.827a1.125 1.125 0 0 1-.26-1.43l1.297-2.247a1.125 1.125 0 0 1 1.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.086.22-.128.332-.183.582-.495.644-.869l.214-1.28Z"
    />
    <path
      strokeLinecap="round"
      strokeLinejoin="round"
      d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"
    />
  </svg>
);

export const LogoIcon = (props: {
  svgProps?: SVGProps<SVGSVGElement>;
  className?: string;
}) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width="159"
    height="32"
    viewBox="0 0 159 32"
    fill="none"
  >
    <path
      d="M16 6C16 7.10457 15.1046 8 14 8C12.8954 8 12 7.10457 12 6C12 4.89543 12.8954 4 14 4C15.1046 4 16 4.89543 16 6Z"
      fill="#00CFFD"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M10.4 11.2C10.4 8.99086 8.60914 7.2 6.4 7.2H2V9.6H6.4C7.28366 9.6 8 10.3163 8 11.2V24C8 24.8837 7.28366 25.6 6.4 25.6H2V28H6.4C8.60914 28 10.4 26.2091 10.4 24V11.2Z"
      fill="#00CFFD"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M17.6 11.2V24C17.6 26.2091 19.3909 28 21.6 28H26V25.6H21.6C20.7163 25.6 20 24.8837 20 24V11.2C20 10.3163 20.7163 9.6 21.6 9.6H26V7.2H21.6C19.3909 7.2 17.6 8.99086 17.6 11.2Z"
      fill="#00CFFD"
    />
    <path d="M12.8 10.4H15.2V28H12.8V10.4Z" fill="#00CFFD" />
    <path
      d="M37.6875 25V6.67969H41.4883V25H37.6875ZM34.4609 25V21.7188H44.7148V25H34.4609ZM34.4609 9.96094V6.67969H44.7148V9.96094H34.4609ZM48.1886 25V5.3125H51.6613V25H48.1886ZM54.7795 25V5.3125H58.2522V25H54.7795ZM67.3314 25.3281C66.1283 25.3281 65.0528 25.0911 64.1048 24.6172C63.1752 24.1432 62.4369 23.4688 61.89 22.5938C61.3614 21.7005 61.097 20.6432 61.097 19.4219V11.1914H64.6244V18.793C64.6244 19.8503 64.8705 20.6523 65.3627 21.1992C65.8731 21.7279 66.5293 21.9922 67.3314 21.9922C68.1335 21.9922 68.7806 21.7279 69.2728 21.1992C69.7832 20.6523 70.0384 19.8503 70.0384 18.793V11.1914H73.5658V19.4219C73.5658 20.6432 73.2923 21.7005 72.7455 22.5938C72.1986 23.4688 71.4512 24.1432 70.5033 24.6172C69.5736 25.0911 68.5163 25.3281 67.3314 25.3281ZM80.1841 25.4102C79.5643 25.4102 78.9536 25.3372 78.352 25.1914C77.7505 25.0638 77.1945 24.8906 76.6841 24.6719C76.1919 24.4531 75.7908 24.2344 75.4809 24.0156V20.9805C75.8273 21.2174 76.2466 21.4453 76.7388 21.6641C77.2309 21.8828 77.7414 22.0651 78.27 22.2109C78.7986 22.3385 79.2817 22.4023 79.7192 22.4023C80.4119 22.4023 80.9406 22.2747 81.3052 22.0195C81.688 21.7643 81.8794 21.418 81.8794 20.9805C81.8794 20.6341 81.7244 20.3607 81.4145 20.1602C81.1046 19.9596 80.6489 19.7591 80.0473 19.5586L78.352 18.957C77.313 18.6107 76.5838 18.1185 76.1645 17.4805C75.7635 16.8424 75.563 16.0859 75.563 15.2109C75.563 14.3359 75.7817 13.5794 76.2192 12.9414C76.6749 12.2852 77.3039 11.7747 78.1059 11.4102C78.9263 11.0273 79.8468 10.8359 80.8677 10.8359C81.7244 10.8359 82.5174 10.9635 83.2466 11.2188C83.994 11.4557 84.5591 11.7474 84.9419 12.0938V15.1562C84.5226 14.8646 83.994 14.582 83.3559 14.3086C82.7361 14.0352 82.0799 13.8984 81.3872 13.8984C80.7309 13.8984 80.2114 14.0443 79.8286 14.3359C79.4458 14.6276 79.2544 14.974 79.2544 15.375C79.2544 15.6667 79.3638 15.9401 79.5825 16.1953C79.8195 16.4323 80.2388 16.6419 80.8403 16.8242L82.3989 17.3438C83.4744 17.6536 84.2674 18.1185 84.7778 18.7383C85.2882 19.3398 85.5434 20.0872 85.5434 20.9805C85.5434 21.819 85.2973 22.5755 84.8052 23.25C84.3312 23.9245 83.6841 24.4531 82.8638 24.8359C82.0617 25.2188 81.1684 25.4102 80.1841 25.4102ZM93.0914 25.4102C92.2711 25.4102 91.5237 25.2279 90.8492 24.8633C90.193 24.4987 89.6734 23.9883 89.2906 23.332C88.9078 22.6576 88.7164 21.8646 88.7164 20.9531V14.0898H86.4195V12.3125C87.3128 12.0026 88.0419 11.4284 88.607 10.5898C89.1904 9.7513 89.7008 8.70312 90.1383 7.44531H92.1891V11.1914H96.3453V14.0898H92.1891V20.0508C92.1891 20.6706 92.344 21.1628 92.6539 21.5273C92.982 21.8737 93.456 22.0469 94.0758 22.0469C94.6227 22.0469 95.0966 21.9648 95.4977 21.8008C95.8987 21.6367 96.2542 21.4635 96.5641 21.2812V24.2344C96.2359 24.5807 95.7711 24.8633 95.1695 25.082C94.5862 25.3008 93.8935 25.4102 93.0914 25.4102ZM98.9987 25V11.1914H102.471V25H98.9987ZM102.471 17.2891V13.7891C102.945 12.9688 103.501 12.2852 104.139 11.7383C104.796 11.1914 105.534 10.918 106.354 10.918C106.865 10.918 107.311 11 107.694 11.1641V15.0742C107.421 14.9102 107.129 14.7917 106.819 14.7188C106.527 14.6276 106.208 14.582 105.862 14.582C105.078 14.582 104.413 14.8464 103.866 15.375C103.337 15.8854 102.872 16.5234 102.471 17.2891ZM112.098 8.70312C111.441 8.70312 110.876 8.46615 110.402 7.99219C109.928 7.51823 109.691 6.97135 109.691 6.35156C109.691 5.69531 109.928 5.13932 110.402 4.68359C110.876 4.22786 111.441 4 112.098 4C112.535 4 112.936 4.10938 113.301 4.32812C113.665 4.52865 113.957 4.8112 114.176 5.17578C114.394 5.52214 114.504 5.91406 114.504 6.35156C114.504 6.7526 114.394 7.13542 114.176 7.5C113.957 7.86458 113.665 8.15625 113.301 8.375C112.936 8.59375 112.535 8.70312 112.098 8.70312ZM110.703 25V11.1914H114.176V25H110.703ZM108.488 14.1445V11.1914H114.176V14.1445H108.488ZM123.774 25.4102C122.772 25.4102 121.824 25.2279 120.931 24.8633C120.056 24.4805 119.272 23.9609 118.579 23.3047C117.886 22.6484 117.349 21.8828 116.966 21.0078C116.583 20.1146 116.392 19.1576 116.392 18.1367C116.392 17.1159 116.583 16.168 116.966 15.293C117.349 14.3997 117.886 13.625 118.579 12.9688C119.272 12.2943 120.056 11.7747 120.931 11.4102C121.824 11.0273 122.772 10.8359 123.774 10.8359C124.777 10.8359 125.725 11.0273 126.618 11.4102C127.511 11.7747 128.295 12.2943 128.97 12.9688C129.662 13.625 130.2 14.3997 130.583 15.293C130.984 16.168 131.185 17.1159 131.185 18.1367C131.185 19.1576 130.984 20.1146 130.583 21.0078C130.2 21.8828 129.662 22.6484 128.97 23.3047C128.295 23.9609 127.511 24.4805 126.618 24.8633C125.725 25.2279 124.777 25.4102 123.774 25.4102ZM123.774 22.0469C124.449 22.0469 125.06 21.901 125.606 21.6094C126.172 21.2995 126.627 20.8529 126.974 20.2695C127.32 19.668 127.493 18.957 127.493 18.1367C127.493 17.2799 127.32 16.5599 126.974 15.9766C126.627 15.3932 126.172 14.9557 125.606 14.6641C125.06 14.3542 124.449 14.1992 123.774 14.1992C123.136 14.1992 122.526 14.3542 121.942 14.6641C121.377 14.9557 120.922 15.3932 120.575 15.9766C120.247 16.5599 120.083 17.2799 120.083 18.1367C120.083 18.957 120.247 19.668 120.575 20.2695C120.922 20.8529 121.377 21.2995 121.942 21.6094C122.526 21.901 123.136 22.0469 123.774 22.0469ZM139.307 25.3281C138.104 25.3281 137.028 25.0911 136.08 24.6172C135.15 24.1432 134.412 23.4688 133.865 22.5938C133.337 21.7005 133.072 20.6432 133.072 19.4219V11.1914H136.6V18.793C136.6 19.8503 136.846 20.6523 137.338 21.1992C137.848 21.7279 138.505 21.9922 139.307 21.9922C140.109 21.9922 140.756 21.7279 141.248 21.1992C141.759 20.6523 142.014 19.8503 142.014 18.793V11.1914H145.541V19.4219C145.541 20.6432 145.268 21.7005 144.721 22.5938C144.174 23.4688 143.427 24.1432 142.479 24.6172C141.549 25.0911 140.492 25.3281 139.307 25.3281ZM152.159 25.4102C151.54 25.4102 150.929 25.3372 150.327 25.1914C149.726 25.0638 149.17 24.8906 148.659 24.6719C148.167 24.4531 147.766 24.2344 147.456 24.0156V20.9805C147.803 21.2174 148.222 21.4453 148.714 21.6641C149.206 21.8828 149.717 22.0651 150.245 22.2109C150.774 22.3385 151.257 22.4023 151.695 22.4023C152.387 22.4023 152.916 22.2747 153.28 22.0195C153.663 21.7643 153.855 21.418 153.855 20.9805C153.855 20.6341 153.7 20.3607 153.39 20.1602C153.08 19.9596 152.624 19.7591 152.023 19.5586L150.327 18.957C149.288 18.6107 148.559 18.1185 148.14 17.4805C147.739 16.8424 147.538 16.0859 147.538 15.2109C147.538 14.3359 147.757 13.5794 148.195 12.9414C148.65 12.2852 149.279 11.7747 150.081 11.4102C150.902 11.0273 151.822 10.8359 152.843 10.8359C153.7 10.8359 154.493 10.9635 155.222 11.2188C155.969 11.4557 156.534 11.7474 156.917 12.0938V15.1562C156.498 14.8646 155.969 14.582 155.331 14.3086C154.711 14.0352 154.055 13.8984 153.363 13.8984C152.706 13.8984 152.187 14.0443 151.804 14.3359C151.421 14.6276 151.23 14.974 151.23 15.375C151.23 15.6667 151.339 15.9401 151.558 16.1953C151.795 16.4323 152.214 16.6419 152.816 16.8242L154.374 17.3438C155.45 17.6536 156.243 18.1185 156.753 18.7383C157.264 19.3398 157.519 20.0872 157.519 20.9805C157.519 21.819 157.273 22.5755 156.78 23.25C156.307 23.9245 155.659 24.4531 154.839 24.8359C154.037 25.2188 153.144 25.4102 152.159 25.4102Z"
      fill="#00CFFD"
    />
  </svg>
);

export const ArrowIcon = (props: {
  svgProps?: SVGProps<SVGSVGElement>;
  className?: string;

  fill?: string;
}) => (
  <svg
    className={`${props.className}`}
    xmlns="http://www.w3.org/2000/svg"
    width={24}
    height={24}
    viewBox="0 0 24 24"
    fill="none"
  >
    <path
      d="M6 9L12 15L18 9"
      stroke={props.fill || "#E1E8ED"}
      strokeWidth="1.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const HamburgerIcon = ({
  className,
  ...props
}: SVGProps<SVGSVGElement>) => (
  <svg xmlns="http://www.w3.org/2000/svg" width={24} height={24} {...props}>
    <path d="M3 18h18v-2H3v2Zm0-5h18v-2H3v2Zm0-7v2h18V6H3Z" />
  </svg>
);
